let items = [
  { id: 1, name: 'Item 1', description: 'This is item 1' },
  { id: 2, name: 'Item 2', description: 'This is item 2' },
];

// GET /items
app.get('/items', (req, res) => {
  res.send(items);
});

// GET /items/:id
app.get('/items/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const item = items.find((item) => item.id === id);
  if (!item) {
    res.status(404).send({ message: 'Item not found' });
  } else {
    res.send(item);
  }
});

// POST /item
app.post('/item', (req, res) => {
  const { name, description } = req.body;
  if (!name || !description) {
    res.status(400).send({ message: 'Name and description are required' });
  } else {
    const newItem = {
      id: items.length + 1,
      name,
      description,
    };
    items.push(newItem);
    res.send(newItem);
  }
});

// PUT /item/:id
app.put('/item/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const item = items.find((item) => item.id === id);
  if (!item) {
    res.status(404).send({ message: 'Item not found' });
  } else {
    const { name, description } = req.body;
    if (name) item.name = name;
    if (description) item.description = description;
    res.send(item);
  }
});

// DELETE /item/:id
app.delete('/item/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const index = items.findIndex((item) => item.id === id);
  if (index === -1) {
    res.status(404).send({ message: 'Item not found' });
  } else {
    items.splice(index, 1);
    res.send({ message: 'Item deleted' });
  }
});
